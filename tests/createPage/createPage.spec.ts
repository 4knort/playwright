import { test, expect } from '@playwright/test';

test.describe('новый пользователь открывает страницу create', () => {
  test.beforeEach(async ({ page }) => {
    await page.goto("https://4knort.github.io/colorizr");
  });

  test('видит color picker', async ({ page }) => {
    await expect(page.locator('.sketch-picker >> nth=0')).toBeVisible()
  })

  test('видит панель с выбором цветов', async ({ page }) => {
    await expect(page.locator('.panel >> nth=0')).toBeVisible()
  })

  test('видит 10 элементов выбора цвета', async ({ page }) => {
    const items = page.locator('.panel__color-item--choose')
    const items_count = await items.count();

    await expect(items_count).toEqual(10)
  })
  test('видит что у всех элементов выбора цвета фон rgba(245, 245, 245)', async ({ page }) => {
    const items = page.locator('.panel__color-item--choose');
    const items_count = await items.count();

    for (let i = 0; i < items_count; i++) {
      const loop_item = items.nth(i);

      await expect(loop_item).toHaveCSS('background-color', 'rgb(245, 245, 245)');
    }
  })

  test('видит панель с 10 элементами готовых темных цветов', () => {

  })

  test('видит кнопку select all в панеле с темными цветами', () => {

  })

  test('видит панель с 10 готовыми смешанными цветами', () => {

  })

  test('видит кнопку select all в панеле со смешанными цветами', () => {

  })

  test('видит кнопку открытие коло пикера в панеле смешанных цветов', () => {

  })

  test('видит что в панеле смешанных цветов на элементах нет крестика', () => {

  })

  test('видит что в панеле темных цветов на элементах нет крестика', () => {

  })

  test.describe(`в панеле темных цветов нажимает на кнопку select all`, () => {

    test(`в панеле темных цветов нажимает на кнопку select all
      в панеле выбора цветов все элементы окрасились соответствуя цветам в панеле темных цветов
      нажимает на первый элемент в панеле смешанных цветов
      видит что последний элемент в панеле выбора цвета окрасился в тот же цвет`, () => {

    })

    test.describe('нажимает на первый элемент в панеле смешанных цветов', () => {
      test(' видит что последний элемент в панеле выбора цвета окрасился в тот же цвет', () => {

      })
    })
  })


  test.describe(`в панеле смешанных цветов нажимает на кнопку select all`, () => {

    test(`в панеле выбора цветов все элементы окрасились соответствуя цветам в панеле смешанных цветов`, () => {

    })
  })

  test.describe(`наводит на элемент в панеле темных цветов`, () => {

    test(`видит что появился крестик`, () => {

    })

    test.describe('убирает курсор с элемента', () => {
      test('видит что крестика нет', () => {

      })
    })
  })

  test.describe(`наводит на элемент в панеле смешанных цветов`, () => {

    test(`видит что появился крестик`, () => {

    })

    test.describe('убирает курсор с элемента', () => {
      test('видит что крестика нет', () => {

      })
    })
  })

  test.describe(`нажимает на первый элемент в панеле темных цветов`, () => {

    test(`видит что первый элемент в панеле выбора цветов окрасился в тот же цвет`, () => {

    })

    test(`видит что на элементе появился крестик`, () => {

    })

    test.describe('наводит на покрашенный элемент в выборе цветов', () => {
      test('видит что на нем появился крестик', () => {

      })
    })

    test.describe('нажимает на покрашенный элемент в выборе цветов', () => {
      test('видит что он стал фон элемента стал прозрачным rgba(245. 245. 245)', () => {

      })
    })

    test.describe('уводит курсор на другой элемент', () => {
      test('видит что на выбранном элементе все равно виден крестик', () => {

      })
    })
  })

  test.describe('в панеле смешанных цветов видит кнопку для колор пикера', () => {
    test.describe('нажимает на нее', () => {
      test('видит color picker', () => {

      })
      test.describe('', () => {
        test('видит что color picker исчез', () => {

        })
      })
    })
  })
});
